##
# Generated by keployr
##

# Default ansible playbook file
KEPLOYR_FILE ?= "./src/keployr.yaml"

# Default ansible tags
KEPLOYR_TAGS ?= ""

# Default env name
KEPLOYR_ENV ?= {{ keployr_devop.envs[0].name }}

# var files by env name
{% for env in keployr_devop.envs %}
KEPLOYR_ENV_{{ env.name }}_VARS_FILE = {{ env.vars_file }}
{% endfor %}

define keployr_fn
	KEPLOYR_ENV_VARS_FILE=$(KEPLOYR_ENV_$(KEPLOYR_ENV)_VARS_FILE) ansible-playbook ${KEPLOYR_FILE} --tags=$(1) -i localhost,
endef

###
# open URL
###
{% for env in keployr_devop.envs %}
{% for service in keployr_devop.services %}
{% if service.urls is defined %}
{% for url in service.urls %}
.PHONY: {{ mk_rules_prefix }}{{ env.name }}/{{ service.name | lower | replace(' ', '-') }}/url-{{ url.ingress }}
{{ mk_rules_prefix }}{{ env.name }}/{{ service.name | lower | replace(' ', '-') }}/url-{{ url.ingress }}:
	@echo "https://{{ url.ingress }}{{ env.dns_suffix}}"
	open "https://{{ url.ingress }}{{ env.dns_suffix}}"

{% endfor %}
{% endif %}
{% endfor %}
{% endfor %}

###
# main actions
###
{% if keployr_devop.actions is defined %}
{% for action in keployr_devop.actions %}
.PHONY: {{ mk_rules_prefix }}{{ action.name | lower | replace(' ', '-') }}
{{ mk_rules_prefix }}{{ action.name | lower | replace(' ', '-') }}: {% if action.actions is defined %}{% for sub_action in action.actions %}{{ mk_rules_svc_prefix }}{{ sub_action | replace('.', '/') }} {% endfor %}{% endif %}

{% if action.tags is defined %}
	$(call keployr_fn,{{ action.tags }})
{% endif %}

{% endfor %}
{% endif %}

###
# services
###
{% for service in keployr_devop.services %}
{% if service.actions is defined %}
{% for action in service.actions %}
.PHONY: {{ mk_rules_svc_prefix }}{{ service.name | lower | replace(' ', '-') }}/{{ action.name | lower | replace(' ', '-') }}
{{ mk_rules_svc_prefix }}{{ service.name | lower | replace(' ', '-') }}/{{ action.name | lower | replace(' ', '-') }}:
	$(call keployr_fn,{{ action.tags }})

{% endfor %}
{% endif %}

{% endfor %}

###
# utils
###

print/env:
	printenv | grep KEPLOYR

CIDRE_PLAYBOOK_FILE ?= ./ci/playbook.yaml

ci/build-makefile-readme:
	${KEPLOYR_BIN} devop_build

define call_cidre
    ansible-playbook ${CIDRE_PLAYBOOK_FILE} --tags $(1)
endef

cidre/bump/patch:
	$(call call_cidre,cidre_bump_patch)

cidre/bump/minor:
	$(call call_cidre,cidre_bump_minor)

cidre/bump/major:
	$(call call_cidre,cidre_bump_major)

cidre/ms_close:
	$(call call_cidre,cidre_ms_close)
