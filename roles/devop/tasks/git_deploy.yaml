---

- name: Check
  ansible.builtin.assert:
    that:
    - kp_git_url != ""
    - kp_src_fullpath != ""
    fail_msg: "You must set kp_git_url, kp_src_fullpath variables!"

- name: Clear dir
  ansible.builtin.file:
    path: "{{ kp_tmp_project_dir }}"
    state: absent
    force: yes

- name: "clone branch {{ kp_git_branch }} of {{ kp_git_url }} to {{ kp_tmp_project_dir }}"
  ansible.builtin.shell:
    cmd: |
      git clone --depth=1 -b {{ kp_git_branch }} {{ kp_git_url }} {{ kp_tmp_project_dir }}
      cd {{ kp_tmp_project_dir }}
      {% if kp_git_user_email != '' %}git config user.email "{{ kp_git_user_email }}"{% endif %}
      {% if kp_git_user != '' %}git config user.name "{{ kp_git_user }}"{% endif %}
  register: clone_ret

- debug: msg="{{ clone_ret.stdout }}"

- name: Clean and create {{ kp_dst_fullpath }} directory
  ansible.builtin.file:
    path: "{{ kp_dst_fullpath }}"
    state: "{{ item }}"
  loop: ["absent", "directory"]

- name: Exist or create argoCD appSet {{ kp_dst_gitops_apps_fullpath }} directory
  ansible.builtin.file:
    path: "{{ kp_dst_gitops_apps_fullpath }}"
    state: directory

- name: Copy files from {{ kp_src_fullpath }}, {{ kp_src_gitops_apps_fullpath }}
  ansible.builtin.shell:
    cmd: |
      [ -d "{{ kp_src_fullpath }}" ] && cp -r {{ kp_src_fullpath }}/. {{ kp_dst_fullpath }}
      [ -f "{{ kp_src_gitops_apps_fullpath }}" ] && cp {{ kp_src_gitops_apps_fullpath }} {{ kp_dst_gitops_apps_fullpath }}/
      exit 0
  register: copy_ret

- debug: msg="{{ copy_ret.stdout }}"
- debug: msg="{{ copy_ret.stderr }}"

- name: Add note.md
  when: kp_note_template != ""
  template:
    src: "{{ kp_note_template }}"
    dest: "{{ kp_note_fullpath }}"

- name: Commit & push
  ansible.builtin.shell:
    cmd: |
      git add .
      git status
      git commit -am "{{ kp_git_commit_message }}"
      git push origin {{ kp_git_branch }}
    chdir: "{{ kp_tmp_project_dir }}"
  register: push_ret

- debug: msg="{{ push_ret.stdout }}"
- debug: msg="{{ push_ret.stderr }}"
